plugins {

        id 'com.android.application'
        id 'kotlin-android'
}
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
android {
    compileSdk 32
    compileSdkVersion
    defaultConfig {
        applicationId "myapp.t11.aloka"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        minSdkVersion 28
        targetSdkVersion 32
        versionNameSuffix kotlin_version
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'com.google.mlkit:image-labeling-default-common:17.0.0'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:1.2.0-alpha03"
    implementation "androidx.camera:camera-camera2:1.2.0-alpha03"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:1.2.0-alpha03"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:1.2.0-alpha03"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.2.0-alpha03"
    implementation 'com.google.mlkit:face-detection:16.1.5'
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.0'
    implementation 'com.google.mlkit:pose-detection:18.0.0-beta2'
    implementation 'com.google.mlkit:pose-detection-accurate:18.0.0-beta2'
    implementation 'com.google.mlkit:barcode-scanning:17.0.2'
    implementation 'com.google.mlkit:image-labeling-automl:16.2.1'
    implementation 'com.google.mlkit:linkfirebase:17.0.0'
    implementation 'com.google.mlkit:digital-ink-recognition:18.0.0'
    implementation 'com.google.mlkit:object-detection:17.0.0'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-location:20.0.0' //you can use newer GMS version if you need
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.camera:camera-core:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.0'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    def biometricLibraryVersion = "1.0.1"
    //noinspection GradleDependency
    implementation "androidx.biometric:biometric:$biometricLibraryVersion"
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

}
android {

    packagingOptions {
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    buildFeatures {
        viewBinding true
    }

}


